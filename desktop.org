#+title: Emacs Desktop Environment
#+author: Bailey Feldewerd
#+property: header-args:emacs-lisp :tangle ./desktop.el

* EXWM
** Window Management
#+begin_src emacs-lisp
  (defun bf/run-in-background (command)
    (let ((command-parts (split-string command "[ ]+")))
      (apply #'call-process `(,(car command-parts) nil 0 nil ,@(cdr command-parts)))))

  (defun bf/set-wallpaper ()
    (interactive)
    (start-process-shell-command
      "feh" nil "feh --bg-scale ~/.config/bspwm/wall3.jpg"))

  (defun bf/exwm-init-hook ()
    ;; Make workspace 1 be the one where we land at startup
    (exwm-workspace-switch-create 1)

    ;; Open eshell by default
    ;; (eshell)

    ;; Show battery status in the mode line
    (display-battery-mode 1)

    ;; Show the time and date in the modeline
    (setq display-time-day-and-date t)
    (display-time-mode 1)

    ;; Launch apps that will run in the background
    (bf/run-in-background "nm-applet")
    (bf/run-in-background "pasystray")
    (bf/run-in-background "blueman-applet")
    (bf/run-in-background "unclutter"))

  (defun bf/exwm-update-class ()
    (exwm-workspace-rename-buffer exwm-class-name))

  (use-package exwm
    :config
    ;; Set the default number of workspaces
    (setq exwm-workspace-number 10)

    ;; Make the focus follow the mouse
    (setq mouse-autoselect-window t
        focus-follows-mouse t)

    ;; When window "class" updates, use it to set the buffer name
    (add-hook 'exwm-update-class-hook #'bf/exwm-update-class)

    ;; When EXWM starts up, do some extra configuration
    (add-hook 'exwm-init-hook #'bf/exwm-init-hook)

    ;; Set the screen resolution
    (require 'exwm-randr)
    (exwm-randr-enable)
    (start-process-shell-command "xrandr" nil "xrandr --output eDP1 --off --output DP1 --primary --mode 2560x1440 --pos 0x0 --rotate normal --output DP2 --off --output HDMI1 --off --output VIRTUAL1 --off")

    ;; Set the wallpaper after changing the resolution
    (bf/set-wallpaper)

    ;; Load the system tray
    (require 'exwm-systemtray)
    (exwm-systemtray-enable)

    ;; These keys should always pass through to Emacs
    (setq exwm-input-prefix-keys
          '(?\C-x
            ?\C-u
            ?\C-h
            ?\M-x
            ?\M-`
            ?\M-&
            ?\M-:
            ?\C-\M-j  ;;Buffer list
            ?\C-\ ))  ;; Ctrl+Space

    ;; Ctrl+q will enable the next key to be sent directly
    (define-key exwm-mode-map [?\C-q] 'exwm-input-send-next-key)

    ;; Set up global key bindings. These always work, no matter the input state!
    ;; Keep in mind that changing this list after EXWM initializes has no effect.
    (setq exwm-input-global-keys
          `(
            ;; Reset to line-mode (C-c C-k switches to char-mode via exwm-input-release-keyboard)
            ([?\s-s] . exwm-reset)

            ;; Move between windows
            ([?\s-h] . windmove-left)
            ([?\s-j] . windmove-down)
            ([?\s-k] . windmove-up)
            ([?\s-l] . windmove-right)

            ;; Launch applications
            ([?\s-r] . counsel-linux-app)

            ;; Switch workspace
            ([?\s-w] . exwm-workspace-switch)

            ;; `s-N':  Switch to certain workspace with Super plus a number key (0-9)
            ,@(mapcar (lambda (i)
                        `(,(kbd (format "s-%d" i)).
                          (lambda ()
                            (interactive)
                            (exwm-workspace-switch-create ,i))))
                      (number-sequence 0 9))))
          
    (exwm-enable))
#+end_src

** Media Keys
#+begin_src emacs-lisp
  (use-package desktop-environment
    :after exwm
    :config (desktop-environment-mode)
    :custom
    (desktop-environment-brightness-small-increment "2%+")
    (desktop-environment-brightness-small-decrement "2%-")
    (desktop-environment-brightness-normal-increment "5%+")
    (desktop-environment-brightness-normal-decrement "5%-"))
#+end_src

** Window Transparency
#+begin_src emacs-lisp
  ;; Make the windows transparent
  (set-frame-parameter (selected-frame) 'alpha '(85 . 85))
  (add-to-list 'default-frame-alist '(alpha . (85 . 85)))
#+end_src

* Launcher Script
This launcher script is invoked by =EXWM.desktop= to start Emacs and load our desktop environment configuration. We also start up ssome other helpful applications to configure the desktop experience.

#+begin_src shell :tangle ./exwm/start-exwm.sh :shebang #!/bin/sh
  # Run the screen compositor
  picom &

  # Fire it up
  exec dbus-launch --exit-with-session emacs -mm --debug-init -l ~/.emacs.d/desktop.el

#+end_src

